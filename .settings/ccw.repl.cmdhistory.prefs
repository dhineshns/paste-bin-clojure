cmdhistory=["(use 'ring.adapter.jetty)" "(jetty/run-jetty handler {\:port 3000})" "(jetty/run-jetty handler port-map)" "1" "(defn app-handler [request]\\n  {\:status 200\\n   \:headers {\\"Content-Type\\" \\"text/html\\"}\\n   \:body \\"Hello from Ring\\"})" "(jetty/run-jetty app-handler port-map)" "(jetty/run-jetty app-handler (update port-map \:port 3002)\\n                 )" "(jetty/run-jetty app-handler (assoc port-map \:port 3002)\\n                 )" "(jetty/run-jetty app-handler (assoc port-map \:port 3004)\\n                 )" "(go (jetty/run-jetty app-handler (assoc port-map \:port 3004)\\n                 ))" "(jetty/run-jetty app-handler (assoc port-map \:port 3005)\\n                   )" "(jetty/run-jetty app-handler (assoc port-map \:port 3006\\n                                    )\\n                   )" "(-main)" "1" "(test-app)" "(import datomic.Peer)" "resp" "query" "(add-note \\"ommale\\")" "query" "(add-note \\"dddd\\")" "query" "(get-note 17592186045422)" "(get-note 175921845422)" "(get-note 17592184522)" "(add-note \\"karthik\\")" "(get-note \\"61fe897a-261c-4aa9-baad-bb56bd46251b\\")" "(add-note \\"gommango\\")" "(get-note \\"f6b9c4b3-2d29-4d1b-a386-86fbe971d74b\\")" "(add-note \\"gommango\\")" "(get-note \\"80f10c37-e562-4a56-bd7a-aca93e1b2bf2\\")" "(add-note \\"gommango\\")" "(get-note \\"809c62c7-21fb-4d27-a213-f1aab9e71ce7\\")" "(add-note \\"gommango\\")" "(get-note \\"a44b4347-4925-414a-947a-ecebd528ee6e\\"\\n          )" "(get-note \\"gommango\\"\\n          )" "(add-note \\"gommango\\")" "(get-note \\"8d7958a9-4a87-42d8-9361-db9451a3a386\\"\\n          )" "(ns paste-bin-clojure.datomic\\n  (require [datomic.api \:as datomic]))\\n\\n(def uri \\"datomic\:mem\://notes\\")\\n(datomic/create-database uri)\\n\\n(def connection (datomic/connect uri))\\n(def schema '[{\:db/id \#db/id[\:db.part/db]\\n               \:db/ident \:note/id\\n               \:db/valueType \:db.type/string\\n               \:db/cardinality \:db.cardinality/one\\n               \:db.install/_attribute \:db.part/db}\\n              {\:db/id \#db/id[\:db.part/db]\\n               \:db/ident \:note/content\\n               \:db/valueType \:db.type/string\\n               \:db/cardinality \:db.cardinality/one\\n               \:db.install/_attribute \:db.part/db}])\\n(def datom \\n  [{\:db/id (datomic/tempid \:db.part/user)\\n    \:db/doc \\"first note content\\"}])\\n\\n(def resp (datomic/transact connection schema))\\n\\n(defn add-note [content]\\n  @(datomic/transact connection [{\:db/id (datomic/tempid \:db.part/user)\\n                                  \:note/id (str (java.util.UUID/randomUUID))}\\n                                 {\:db/id (datomic/tempid \:db.part/user)\\n                                  \:note/content content}]))\\n\\n(defn get-note [id]\\n  (datomic/q \\n    '[\:find ?e\\n      \:in $ ?content\\n      \:where \\n      [?e \:note/content ?content]\\n      ]\\n    (datomic/db connection)\\n    id\\n    ))" "(get-note \\"8d7958a9-4a87-42d8-9361-db9451a3a386\\"\\n          )" "(get-note \\"gommango\\"\\n          )" "\\n(get-note \\"gommango\\"\\n          )" "(get-note \\"8d7958a9-4a87-42d8-9361-db9451a3a386\\"\\n          )" "(add-note \\"i'm upset\\")" "(get-note \\"889fcd1d-f801-4ff8-b8f2-be906d231a60\\"\\n          )" "(map (java.util.UUID/randomUUID) [\\"ss\\" \\"ss\\"])" "(map  (random-string 20) (range 10\\n                                )" "(map  (random-string 20) (range 10\\n                                ))" "(map  \#(random-string 20) (range 10\\n                                 ))" "(map  (fn [x] random-string 20) (range 10\\n                                       ))" "(map (fn [x] java.util.UUID/randomUUID) (range 10\\n                                               ))" "(map (fn [x] (java.util.UUID/randomUUID)) (range 10\\n                                                 ))" "(query)" "query" "(query)" "(test-add-notes)" "(let [n 1000\\n        contents (map  (fn [x] ( random-string 20)) (range 10\\n                                          ))\\n        ]\\n    contents\\n    )" "(map  (fn [x] ( random-string 20)) (range 10\\n                                             ))" "(map  (fn [x] (random-string 20)) (range 10))" "(test-add-notes)" "(map  (fn [x] ( random-string 20)) (range 10\\n                                          ))" "(random-string 20)" "(test-add-notes)" "(run-tests)" "(test-add-notes)" "(add-note \\"omg\\")" "(get-note-id (add-note \\"omg\\"))" "(test-add-notes)"]
eclipse.preferences.version=1
